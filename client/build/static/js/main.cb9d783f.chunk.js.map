{"version":3,"sources":["../node_modules/peerjs/dist sync","components/ChatScreen/SingleMessage/index.js","components/ChatScreen/OnlineUsersList/UserView/index.js","components/ChatScreen/OnlineUsersList/index.js","contexts/LoginContext.js","components/ChatScreen/index.js","components/LoginScreen/index.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","SingleMessage","props","envelope","sender","message","type","Col","xs","className","src","alt","UserView","lastSeenString","user","setSendingTo","sendingTo","unreads","closeOnlineUsersModal","lastSeen","isOnline","lastSeenDate","Date","timeDiffInSecs","getDate","getMonth","date","hours","getHours","minutes","getMinutes","ampm","formatTime","username","onClick","OnlineUsersList","onlineUsers","unreadMessagesCount","map","LoginContext","React","createContext","MessageNotificationSound","Audio","IncomingCallNotificationSound","CallDropNotificationSound","OutgoingCallRingSound","loop","peer_call","local_stream","myPeer","Peer","undefined","secure","initialCallState","isInCall","callType","callStatus","isInCallWith","peerIdToCall","callStateReducer","state","action","calling_to","call_from","callee_peerId","callTimeout","x","navigator","userAgent","vendor","window","opera","isMobileDevice","test","substr","ChatScreen","useContext","socket","messagesEndRef","useRef","messageTextboxRef","sendFileDialogRef","mediaDivRef","useState","setOnlineUsers","conversation","setConversation","setUnreadMessages","newMessage","setNewMessage","sendingToIsOnline","setSendingToIsOnline","showOnlineUsersModal","setShowOnlineUsersModal","useReducer","callState","dispatch","updateConversation","channel","to","isBroadcast","length","updatedSingleConversation","conversationCopy","updateUnreadOnMessageReceive","unreadMessages_copy","endCall","fromSelf","clearTimeout","resetNotificationSounds","play","console","log","removeAllListeners","emit","close","clearEndedCallDetails","current","srcObject","getTracks","forEach","track","stop","pause","currentTime","useEffect","open","hist","JSON","parse","sessionStorage","getItem","disconnect","scrollIntoView","block","updateUnreadOnFocusChange","userIndex","findIndex","setItem","stringify","on","registeredUsers","userList","filter","reason","connect","peerId","from_user","setTimeout","Container","fluid","mediaDevices","getUserMedia","audio","video","then","stream","call","userVideoStream","Row","sm","Modal","show","onHide","centered","Header","closeButton","Body","ref","Form","onSubmit","preventDefault","alert","sendMessage","Group","as","controlId","InputGroup","Control","size","placeholder","value","onChange","target","autocomplete","Append","Button","variant","find","answer","click","File","accept","event","file","files","reader","FileReader","readAsDataURL","onload","dataURL","result","sendFile","Alert","autoplay","LoginScreen","Context","formIsValidated","setFormIsValidated","setUsername","password","setPassword","noValidate","validated","currentTarget","checkValidity","stopPropagation","userCredentials","axios","post","location","href","res","status","catch","err","response","data","md","Label","required","autoFocus","Feedback","io","loginReducer","loggedIn","App","loginDetails","handleLogout","connected","LoginContextValue","Provider","Navbar","expand","sticky","Brand","Nav","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.cb9d783f.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 122;","import React from 'react';\n\nimport './SingleMessage.css';\n\nimport Col from 'react-bootstrap/Col'\n\nexport default function SingleMessage(props){\n\n  const envelope = props.envelope;\n  const sender = envelope.sender;\n  const message = envelope.message;\n  const type = envelope.type;\n\n  return(\n    <div>\n      {sender === \"Me\"? (<Col xs=\"2\"></Col>) : null}\n      <div className={sender === 'Me'? 'single-message__self' : 'single-message__other'}>\n        <small><strong>{sender}</strong></small>\n        <div className=\"single-message__content\">\n\n        {type === \"image\"? (<img className=\"single-message__image\" src={message} alt=\"Problem loading resource\"/>) : message}\n\n        </div>\n\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\n\nimport './UserView.css'\n\nexport default function UserView(props){\n  const user =  props.user;\n  const setSendingTo = props.setSendingTo;\n  const sendingTo = props.sendingTo;\n  const unreads = props.unreads;\n  const closeOnlineUsersModal =  props.closeOnlineUsersModal;\n\n  const formatTime = (date) => {\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let ampm = hours>12 ? 'PM' : 'AM';\n    hours %= 12;\n    minutes = minutes < 10 ? '0'+minutes : minutes;\n    let strTime=`${hours}:${minutes} ${ampm}`;\n    return strTime;\n  }\n\n  let lastSeenString;\n  if(user.lastSeen && !user.isOnline){\n    lastSeenString = \"last seen\"\n    let lastSeenDate = new Date(user.lastSeen)\n    let timeDiffInSecs = (new Date() - lastSeenDate)/1000;\n    if(timeDiffInSecs <= 24*60*60){\n      lastSeenString += \" today at \"\n    } else if (timeDiffInSecs <= 2*24*60*60) {\n      lastSeenString += \" yesterday at \"\n    } else {\n      lastSeenString += ` on ${lastSeenDate.getDate()}/${lastSeenDate.getMonth()+1} at `\n    }\n    lastSeenString += formatTime(lastSeenDate);\n  }\n\n  const changeConversationWindow = () =>{\n    setSendingTo(user.username);\n    closeOnlineUsersModal();\n  }\n\n  return (\n    <div className={sendingTo === user.username? \"online-user-selected\" : \"online-user\"} \n        onClick={changeConversationWindow}>\n      <div className=\"online-user__icon\">\n      </div>\n      <div className=\"online-user__details\">\n      <strong>{user.username}</strong><br/>\n      {user.username !== \"conference\"? \n            ((user.isOnline)? \n                \"Online\" : \n                (user.lastSeen? lastSeenString : \"Offline\")\n            ) : \n            null}\n      </div>\n      {unreads>0? (<div className=\"online-user__details__unreads\">{unreads}</div>) : null}\n    </div>\n  )\n}\n","import React from 'react';\n\nimport UserView from './UserView';\nimport './OnlineUsersList.css';\n\nexport default function OnlineUsersList(props){\n  const sendingTo = props.sendingTo;\n  const setSendingTo = props.setSendingTo;\n  var onlineUsers =  props.onlineUsers;\n  onlineUsers = [{username: \"conference\"}, ...onlineUsers];\n  var unreadMessagesCount =  props.unreadMessagesCount;\n  const closeOnlineUsersModal = props.closeOnlineUsersModal;\n\n  return (\n    <div className=\"online-users-list\">\n      {onlineUsers.map(user => (<UserView user={user} unreads={unreadMessagesCount[user.username]} sendingTo={sendingTo} setSendingTo={setSendingTo} closeOnlineUsersModal={closeOnlineUsersModal}/>))}\n    </div>\n  )\n}\n","import React from 'react';\n\nconst LoginContext = React.createContext(null);\n\nexport default LoginContext;\n","import React, {useState, useEffect,useContext, useRef, useReducer} from 'react';\nimport Peer from 'peerjs';\n\nimport './ChatScreen.css';\nimport SingleMessage from './SingleMessage';\nimport OnlineUsersList from './OnlineUsersList';\nimport LoginContext from '../../contexts/LoginContext';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport { Camera, Telephone, TelephoneInbound,TelephoneX } from 'react-bootstrap-icons';\n\nconst MessageNotificationSound = new Audio(process.env.PUBLIC_URL+ \"/msg_notification.mp3\");\nconst IncomingCallNotificationSound = new Audio(process.env.PUBLIC_URL+ \"/call_notification.mp3\");\nconst CallDropNotificationSound = new Audio(process.env.PUBLIC_URL+ \"/call_drop_notification.mp3\");\nconst OutgoingCallRingSound = new Audio(process.env.PUBLIC_URL+ \"/ringing_tone.mp3\");\n\nIncomingCallNotificationSound.loop = true;\nOutgoingCallRingSound.loop = true;\n\n\nconst myPeer = new Peer(undefined,{\n  secure: true\n})\nvar peer_call;\nvar local_stream;\n\nconst initialCallState = {\n  isInCall: false,\n  callType: null,\n  callStatus: null,\n  isInCallWith: null,\n  peerIdToCall: null\n}\n\nfunction callStateReducer(state, action){\n  switch (action.type) {\n    case 'outgoing-call':\n      return {\n        isInCall: true,\n        callType: 'outgoing',\n        callStatus: 'ringing',\n        isInCallWith: action.calling_to,\n      };\n    case 'outgoing-call__answered':\n      return {...state, callStatus:'connected'};\n    case 'outgoing-call__declined':\n      return {};\n    case 'incoming-call':\n      return {\n        isInCall: true,\n        callType: 'incoming',\n        callStatus: 'ringing',\n        isInCallWith: action.call_from,\n        peerIdToCall: action.callee_peerId\n      };\n    case 'incoming-call__answered':\n      return {...state, callStatus:'connected'};\n    case 'incoming-call__declined':\n      return {};\n    case 'call__ended':\n      return {...initialCallState};\n      default:\n      throw new Error();\n  }\n}\n\nconst x = navigator.userAgent||navigator.vendor||window.opera;\nconst isMobileDevice = (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(x)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(x.substr(0,4)))\nlet callTimeout;\n\nexport default function ChatScreen(props){\n\n  const Context = useContext(LoginContext);\n  const username = Context.username;\n\n  const socket = props.socket;\n\n  const messagesEndRef = useRef(null);\n  const messageTextboxRef = useRef(null);\n  const sendFileDialogRef = useRef(null);\n  const mediaDivRef = useRef(null);\n\n\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [conversation, setConversation] = useState({});\n  const [unreadMessagesCount, setUnreadMessages] = useState({});\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [sendingTo, setSendingTo] = useState(\"conference\");\n  const [sendingToIsOnline, setSendingToIsOnline] = useState(true);\n  const [showOnlineUsersModal, setShowOnlineUsersModal] = useState(false);\n  const closeOnlineUsersModal = () => setShowOnlineUsersModal(false);\n  const openOnlineUsersModal = () => setShowOnlineUsersModal(true);\n\n  const [callState, dispatch] = useReducer(callStateReducer, initialCallState)\n\n  useEffect(()=>{\n    socket.open();\n    socket.emit('login', username, isMobileDevice);\n    const hist = JSON.parse(sessionStorage.getItem('conversation'));\n    if(hist){\n      setConversation(hist);\n    }\n    return () => {\n      socket.disconnect();\n    }\n  }, [username, socket])\n\n  useEffect(()=>{\n    messagesEndRef.current.scrollIntoView({block: \"end\"});\n    updateUnreadOnFocusChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    if(sendingTo !== \"conference\"){\n      let userIndex = onlineUsers.findIndex(user => user.username === sendingTo)\n      setSendingToIsOnline(onlineUsers[userIndex].isOnline);\n    }\n  }, [sendingTo,conversation, onlineUsers]);\n\n  useEffect(()=>{\n    sessionStorage.setItem('conversation', JSON.stringify(conversation));\n  }, [conversation]);\n\n  useEffect(()=>{\n    socket.removeAllListeners('broadcast-to-clients');\n    socket.removeAllListeners('online-users-list');\n    socket.removeAllListeners('personal_message');\n    socket.removeAllListeners('disconnect');\n\n    socket.on('broadcast-to-clients', (envelope)=>{\n      MessageNotificationSound.play();\n      updateUnreadOnMessageReceive(envelope);\n      updateConversation('incoming', envelope);\n    })\n    socket.on('online-users-list', (registeredUsers)=>{\n      let userList = registeredUsers.filter(user => user.username != username)\n      setOnlineUsers(userList);\n    })\n    socket.on('personal_message', (envelope)=>{\n      MessageNotificationSound.play();\n      updateUnreadOnMessageReceive(envelope);\n      updateConversation('incoming', envelope);\n    })\n    socket.on('disconnect', (reason) =>{\n      if(!(reason === 'io client disconnect')){\n        socket.connect();\n      }\n    })\n\n    socket.removeAllListeners('incoming_call_request');\n    socket.on('incoming_call_request', (peerId, from_user) => {\n      console.log(\"initiating call to peerId: \"+peerId);\n      IncomingCallNotificationSound.play();\n      dispatch({type: 'incoming-call', call_from: from_user, callee_peerId: peerId});\n    })\n\n    socket.removeAllListeners('end_ongoing_call');\n    socket.on('end_ongoing_call', () => {\n      console.log(\"ending call due to socket event receipt\");\n      endCall();\n    })\n\n  });\n\n  useEffect(()=>{\n    if(callState.callType === 'outgoing' && callState.callStatus === 'ringing'){\n      callTimeout = setTimeout(()=>{\n        endCall(true)\n      },30000)\n    }\n  }, [callState])\n\n\n  function sendMessage(e){\n    e.preventDefault();\n    if(newMessage === \"\"){\n      alert(\"Cant send blank\")\n    }\n    else{\n      const envelope = {\n        sender: username,\n        to: sendingTo,\n        type:\"text\" ,\n        message: newMessage,\n        isBroadcast: sendingTo === 'conference'\n      }\n      if(sendingTo === \"conference\"){\n        socket.emit('broadcast-to-server', envelope);\n      } else {\n        socket.emit('personal_message', envelope)\n      }\n      envelope.sender=\"Me\";\n      updateConversation('outgoing', envelope);\n      setNewMessage(\"\");\n    }\n  }\n\n  function sendFile(event){\n    var file = event.target.files[0];\n    var reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      var dataURL = reader.result;\n      const envelope = {\n        sender: username,\n        to: sendingTo,\n        type:\"image\" ,\n        message: dataURL,\n        isBroadcast: sendingTo === 'conference'\n      }\n      if(sendingTo === \"conference\"){\n        socket.emit('broadcast-to-server', envelope);\n      } else {\n        socket.emit('personal_message', envelope)\n      }\n      envelope.sender=\"Me\";\n      updateConversation('outgoing', envelope);\n    }\n  }\n\n  function updateConversation(type, envelope){\n    var channel;\n    if(type === 'outgoing'){\n      channel = envelope.to;\n    } else {\n      if (envelope.isBroadcast){\n        channel = \"conference\";\n      } else{\n        channel = envelope.sender;\n      }\n    }\n    if( (channel in conversation) && (conversation[channel].length>0) ){\n      const updatedSingleConversation = [...conversation[channel], envelope];\n      const conversationCopy = {...conversation};\n      conversationCopy[channel] = updatedSingleConversation;\n      setConversation(conversationCopy);\n    } else {\n      const updatedSingleConversation = [envelope];\n      const conversationCopy = {...conversation};\n      conversationCopy[channel] = updatedSingleConversation;\n      setConversation(conversationCopy);\n    }\n  }\n\n  function updateUnreadOnMessageReceive(envelope){\n    var channel;\n    if (envelope.isBroadcast){\n      channel = \"conference\";\n    } else{\n      channel = envelope.sender;\n    }\n    if(channel !== sendingTo){\n      if(channel in unreadMessagesCount){\n        const unreadMessages_copy = unreadMessagesCount;\n        unreadMessages_copy[channel] = unreadMessages_copy[channel]+1;\n        setUnreadMessages(unreadMessages_copy);\n      } else{\n        const unreadMessages_copy = unreadMessagesCount;\n        unreadMessages_copy[channel] = 1;\n        setUnreadMessages(unreadMessages_copy);\n      }\n    }\n  }\n\n  function updateUnreadOnFocusChange(){\n    const unreadMessages_copy = unreadMessagesCount;\n    unreadMessages_copy[sendingTo] = 0;\n    setUnreadMessages(unreadMessages_copy);\n  }\n\n  function initiate_audio_call(){\n    console.log(onlineUsers)\n    if(sendingTo === 'conference'){\n      alert('Oops! Conference calls are not yet supported!')\n    }\n    else if(onlineUsers.find(user => (user.username === sendingTo)).isMobileDevice){\n      alert(`Oops! Cannot call ${sendingTo} as the user is logged from mobile device !`)\n    }\n    else{\n      console.log('Placing audio call request');\n      OutgoingCallRingSound.play();\n      socket.emit('make_call_request', myPeer.id, sendingTo, username);\n      dispatch({type: 'outgoing-call', calling_to: sendingTo});\n\n      myPeer.on('call', call=>{\n        console.log(\"call received from another user\");\n        resetNotificationSounds();\n        dispatch({type: 'outgoing-call__answered'});\n        navigator.mediaDevices.getUserMedia({\n          audio:true,\n          video:false\n        }).then(stream =>{\n          local_stream = stream;\n          peer_call=call;\n          call.answer(stream);\n          call.on('stream', userVideoStream =>{\n            mediaDivRef.current.srcObject = userVideoStream;\n            console.log(\"Stream received from calling to user\");\n          })\n          peer_call.on('close', () =>{\n            console.log(\"on close() called for \" + callState.callType);\n            clearEndedCallDetails();\n          })\n        });\n      });\n\n    }\n  }\n\n  function answerIncomingCall(){\n    resetNotificationSounds();\n    dispatch({type: 'incoming-call__answered'});\n    navigator.mediaDevices.getUserMedia({\n      audio:true,\n      video:false\n    }).then(stream => {\n      local_stream = stream;\n      peer_call = myPeer.call(callState.peerIdToCall,stream);\n      peer_call.on('stream', userVideoStream =>{\n        mediaDivRef.current.srcObject = userVideoStream;\n        console.log(\"stream received from call initiator user\")\n      })\n      peer_call.on('close', ()=>{\n        console.log(\"on close() called for \" + callState.callType);\n        clearEndedCallDetails()\n      })\n    })\n  }\n\n  function endCall(fromSelf){\n    clearTimeout(callTimeout)\n    resetNotificationSounds();\n    if(callState.callType === 'outgoing') CallDropNotificationSound.play();\n    console.log(\"ending \"+ callState.callType  + \" call\");\n    myPeer.removeAllListeners();\n    if(fromSelf){\n      socket.emit('end_ongoing_call', callState.isInCallWith);\n    }\n    switch (callState.callStatus){\n      case 'connected':\n        peer_call.close();\n        break;\n      case 'ringing':\n        clearEndedCallDetails();\n        break;\n    }\n  }\n\n  function clearEndedCallDetails(){\n    mediaDivRef.current.srcObject = null;\n    if(local_stream){\n      local_stream.getTracks().forEach(track => track.stop())\n    }\n    dispatch({type: 'call__ended'})\n  }\n\n  function resetNotificationSounds(){\n    IncomingCallNotificationSound.pause();\n    IncomingCallNotificationSound.currentTime = 0;\n    OutgoingCallRingSound.pause();\n    OutgoingCallRingSound.currentTime = 0;\n  }\n\n  return (\n    <Container fluid id=\"chat-screen\">\n      \n      {callState.isInCall? (\n        <div className=\"chat-screen_call_ui\">\n          <div className=\"chat-screen_call_ui__icon\">\n          </div>\n          <div className=\"chat-screen_call_ui__details\">\n          <strong>{callState.isInCallWith}</strong>\n          </div>\n          <div className=\"chat-screen_call_ui_actions\">\n            {(callState.callType === 'incoming' && callState.callStatus === 'ringing') ?\n              ( <span className=\"call_answer_button\" onClick={()=> answerIncomingCall()}>\n                  <TelephoneInbound />  \n                </span>\n              ) : null\n            }\n              <span className=\"call_end_button\" onClick={()=> endCall(true)}>\n                <TelephoneX />\n              </span>\n          </div>\n        </div>\n\n      ) : null\n      }\n\n        <Row id=\"chat-screen__msg-area\">\n          <Col xs=\"3\" sm=\"3\" id=\"chat-screen__msg-area__online-users\">\n            <OnlineUsersList onlineUsers={onlineUsers} unreadMessagesCount={unreadMessagesCount}\n                             sendingTo={sendingTo} setSendingTo={setSendingTo} closeOnlineUsersModal={closeOnlineUsersModal}/>\n          </Col>\n          <Col xs=\"12\" sm=\"9\" id=\"chat-screen__msg-area__main\">\n              <div id=\"chat-screen__msg-area__header\">\n                <span id=\"chat-screen__msg-area__header__normal\">{sendingTo}</span>\n                <span id=\"chat-screen__msg-area__header__xs\" onClick={openOnlineUsersModal}>{sendingTo}</span>\n                <Modal show={showOnlineUsersModal} onHide={closeOnlineUsersModal} centered>\n                        <Modal.Header closeButton></Modal.Header>\n                        <Modal.Body id=\"chat-screen__mobile-device__user-list\">\n                        <OnlineUsersList onlineUsers={onlineUsers} unreadMessagesCount={unreadMessagesCount}\n                                         sendingTo={sendingTo} setSendingTo={setSendingTo}\n                                         closeOnlineUsersModal={closeOnlineUsersModal}/>\n                        </Modal.Body>\n                </Modal>\n              </div>\n              <div className=\"chat-screen__msg-area__conversation\">\n                  {(sendingTo in conversation && conversation[sendingTo].length>0)?\n                      conversation[sendingTo].map((envelope)=> (<SingleMessage envelope={envelope}/>)) :\n                      null\n                  }\n                  <Row className = \"dummy-message\" ref={messagesEndRef}>\n                  </Row>\n              </div>\n              {(sendingTo === \"conference\" || sendingToIsOnline) ? (\n                <div className=\"chat-screen__actions\">\n                  <Form onSubmit={(e)=> sendMessage(e)}>\n                      <Form.Group as={Col} sm=\"12\" controlId=\"send_message\">\n                        <InputGroup>\n                            <Form.Control id=\"chat-screen__actions__message\" ref={messageTextboxRef} size=\"md\" type=\"text\"\n                              placeholder=\"Type a message\" value={newMessage}\n                              onChange={(e)=> setNewMessage(e.target.value)} autocomplete=\"off\"/>\n                          <InputGroup.Append>\n                            {isMobileDevice? null: (\n                              <Button variant=\"secondary\" onClick={()=> initiate_audio_call()}>\n                                <Telephone />\n                              </Button>\n                            )}\n                            <Button variant=\"secondary\" onClick={()=> {sendFileDialogRef.current.click()}}>\n                              <Camera />\n                            </Button>\n                            <Form.File id=\"chat-screen__actions__file\" accept=\"image/*\"\n                            ref={sendFileDialogRef} onChange={(e)=> sendFile(e)}/>\n                          </InputGroup.Append>\n                        </InputGroup>\n                      </Form.Group>\n                  </Form>\n                </div>\n              ) : <Alert variant=\"light\">Messages cannot be sent as {sendingTo} is Offline</Alert>}\n          </Col>\n        </Row>\n        <video className=\"chat-screen__mediastream\" autoplay=\"true\" id=\"mediaDiv\" ref={mediaDivRef} />\n    </Container>\n  );\n}\n","import React, {useContext, useState} from 'react';\nimport axios from 'axios';\nimport './LoginScreen.css';\n\nimport LoginContext from '../../contexts/LoginContext';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport default function LoginScreen(){\n\n  const Context = useContext(LoginContext);\n\n  const [formIsValidated, setFormIsValidated] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    if (form.checkValidity() === false) {\n      e.stopPropagation();\n      setFormIsValidated(true)\n    }\n    else{\n      const userCredentials = {\n        \"username\": username,\n        \"password\": password\n      }\n      axios.post(`${window.location.href}login`, userCredentials)\n      .then(res =>{\n        if(res.status === 200){\n          sessionStorage.setItem('username', JSON.stringify(username));\n          sessionStorage.setItem('loggedIn', JSON.stringify(true));\n          Context.dispatch({type: 'login', username})\n        }\n      })\n      .catch(err =>{\n        if(err){\n          if(err.response && (err.response.status === 401 || err.response.status === 403)){\n            alert(err.response.data)\n          }\n          else{\n            alert(\"Something went wrong. Please try later\");\n          }\n        }\n      })\n    }\n  }\n\n  return(\n      <Form className=\"login-form\" noValidate validated={formIsValidated} onSubmit={handleLogin}>\n        <Form.Group as={Row} className=\"justify-content-center\" controlId=\"validate_login_username\">\n          <Col sm=\"2\" md=\"1\">\n            <Form.Label>Username</Form.Label>\n          </Col>\n          <Col sm=\"4\" md=\"4\">\n            <Form.Control type=\"text\" size=\"sm\" value={username}\n                          onChange={(e) => setUsername(e.target.value)}\n                          required autocomplete=\"off\" autoFocus>\n            </Form.Control>\n            <Form.Control.Feedback type=\"invalid\">Please provide username</Form.Control.Feedback>\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} className=\"justify-content-center\" controlId=\"validate_login_password\">\n          <Col sm=\"2\" md=\"1\">\n            <Form.Label>Password</Form.Label>\n          </Col>\n          <Col sm=\"4\" md=\"4\">\n            <Form.Control type=\"password\" size=\"sm\" value={password}\n            onChange={(e) => setPassword(e.target.value)} required>\n            </Form.Control>\n            <Form.Control.Feedback type=\"invalid\">Please provide password</Form.Control.Feedback>\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} className=\"justify-content-center\">\n          <Col sm=\"4\" md=\"4\">\n          </Col>\n          <Col sm=\"2\" md=\"1\">\n          <Button className=\"btn-block\" type=\"submit\">Login</Button>\n          </Col>\n        </Form.Group>\n      </Form>\n  )\n}\n","import React, {useReducer} from 'react';\nimport io from 'socket.io-client';\n\nimport ChatScreen from './components/ChatScreen';\nimport LoginScreen from './components/LoginScreen';\nimport './App.css';\n\nimport LoginContext from './contexts/LoginContext';\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\n\nconst socket = io({secure: true});\n\nfunction loginReducer(state, action){\n  switch (action.type) {\n    case 'login':\n      return {loggedIn: true, username: action.username};\n    case 'logout':\n      return {loggedIn: false, username: null};\n    default:\n      throw new Error();\n  }\n}\n\nfunction App() {\n\n  const [loginDetails, dispatch] = useReducer(loginReducer,{\n    username: (JSON.parse(sessionStorage.getItem('username')) || \"\"),\n    loggedIn: (JSON.parse(sessionStorage.getItem('loggedIn')) || false)\n  })\n\n  const handleLogout = () =>{\n    sessionStorage.setItem('username', JSON.stringify(null));\n    sessionStorage.setItem('loggedIn', JSON.stringify(false));\n    if(socket.connected){\n      socket.close();\n    }\n    dispatch({type: 'logout'});\n\n  }\n\n  const LoginContextValue={\n    ...loginDetails,\n    dispatch\n  }\n\n  return (\n    <LoginContext.Provider value={LoginContextValue}>\n    <Navbar className=\"header\" expand=\"lg\" sticky=\"top\">\n      <Navbar.Brand>Instant Messenger</Navbar.Brand>\n        {loginDetails.loggedIn === true? (\n          <>\n          <Nav className=\"ml-auto\">\n            <Button variant=\"outline-secondary\" size=\"sm\" onClick={handleLogout}>Logout</Button>\n          </Nav>\n          </>\n        ) : null}\n    </Navbar>\n        {loginDetails.loggedIn === true? (<ChatScreen handleLogout={handleLogout} socket={socket}/>) : (<LoginScreen />)}\n    </LoginContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}